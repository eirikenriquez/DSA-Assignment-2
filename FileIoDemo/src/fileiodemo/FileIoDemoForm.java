/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fileiodemo;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author xhu
 */
public class FileIoDemoForm extends javax.swing.JFrame {

    private FileReaderWriter fileRW;
    private int messageType = 0;
    
    /**
     * Creates new form FileIoDemoForm
     */
    public FileIoDemoForm() {
        initComponents();
        fileRW = new FileReaderWriter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTFattachString = new javax.swing.JTextField();
        jBopenFile = new javax.swing.JButton();
        jBsaveFile = new javax.swing.JButton();
        jBMessageBox = new javax.swing.JButton();
        jBInputMessageBox = new javax.swing.JButton();
        jBSelectionMessageBox = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTFattachString.setText("String you want to attach on each line");

        jBopenFile.setText("Open File");
        jBopenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBopenFileActionPerformed(evt);
            }
        });

        jBsaveFile.setText("Save");
        jBsaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsaveFileActionPerformed(evt);
            }
        });

        jBMessageBox.setText("Message Box");
        jBMessageBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMessageBoxActionPerformed(evt);
            }
        });

        jBInputMessageBox.setText("Input Message Box");
        jBInputMessageBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInputMessageBoxActionPerformed(evt);
            }
        });

        jBSelectionMessageBox.setText("Selection Message Box");
        jBSelectionMessageBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSelectionMessageBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBMessageBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBInputMessageBox))
                    .addComponent(jTFattachString, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBopenFile)
                        .addGap(18, 18, 18)
                        .addComponent(jBsaveFile))
                    .addComponent(jBSelectionMessageBox))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFattachString, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBopenFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBsaveFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBMessageBox)
                    .addComponent(jBInputMessageBox)
                    .addComponent(jBSelectionMessageBox))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBopenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBopenFileActionPerformed
        // TODO add your handling code here:
        JFileChooser txtFileChooser = new JFileChooser(new File("."));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("","txt");
        txtFileChooser.setFileFilter(filter);
        int stateTxtFileChooser = txtFileChooser.showOpenDialog(null);
        
        if(stateTxtFileChooser == JFileChooser.APPROVE_OPTION)
        {
            String fileName = txtFileChooser.getSelectedFile().getPath();
            fileRW.readFile(fileName);
        }
    }//GEN-LAST:event_jBopenFileActionPerformed

    private void jBsaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsaveFileActionPerformed
        // TODO add your handling code here:
        String outputFileContent = "";
        for(int i = 0; i < fileRW.lineNumber; i++)
        {
            outputFileContent += (fileRW.lineData[i]+" "+jTFattachString.getText()+"\n");
        }
        
        JFileChooser txtFileChooser = new JFileChooser(new File("output.txt"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("","txt");
        txtFileChooser.setFileFilter(filter);
        int stateTxtFileChooser = txtFileChooser.showSaveDialog(null);       
        if(stateTxtFileChooser == JFileChooser.APPROVE_OPTION)
        {
            String fileName = txtFileChooser.getSelectedFile().getPath();
            fileRW.writeFile(fileName, outputFileContent);
        }
        
    }//GEN-LAST:event_jBsaveFileActionPerformed

    private void jBMessageBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMessageBoxActionPerformed
        // TODO add your handling code here:
        switch(messageType)
        {
            case 0:
            JOptionPane.showMessageDialog(null, "Information Message", "Message Box", JOptionPane.INFORMATION_MESSAGE);
            break;
            case 1:
            JOptionPane.showMessageDialog(null, "Plain Message", "Message Box", JOptionPane.PLAIN_MESSAGE);
            break;
            case 2:
            JOptionPane.showMessageDialog(null, "Error Message", "Message Box", JOptionPane.ERROR_MESSAGE);
            break;
            case 3:
            JOptionPane.showMessageDialog(null, "Question Message", "Message Box", JOptionPane.QUESTION_MESSAGE);
            break;
            case 4:
            JOptionPane.showMessageDialog(null, "Warning Message", "Message Box", JOptionPane.WARNING_MESSAGE);
            break;
        }
        messageType++;
        messageType%=5;
    }//GEN-LAST:event_jBMessageBoxActionPerformed

    private void jBInputMessageBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInputMessageBoxActionPerformed
        // TODO add your handling code here:
        String messageInput;
        messageInput = JOptionPane.showInputDialog(null, "Input here", "Input Message Box");
        if(messageInput != null)
        {
            jTFattachString.setText(messageInput);
        }
    }//GEN-LAST:event_jBInputMessageBoxActionPerformed

    private void jBSelectionMessageBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSelectionMessageBoxActionPerformed
        // TODO add your handling code here:
        String[] courseCode= new String("COMP500, COMP503, COMP610, COMP611").split(", ");
        String messageInput;
        messageInput = (String)JOptionPane.showInputDialog(null, "Programming Courses", "Selection Message Box", JOptionPane.PLAIN_MESSAGE, null, courseCode, null );
        if(messageInput != null)
        {
            jTFattachString.setText(messageInput);
        }
    }//GEN-LAST:event_jBSelectionMessageBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileIoDemoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileIoDemoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileIoDemoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileIoDemoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileIoDemoForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBInputMessageBox;
    private javax.swing.JButton jBMessageBox;
    private javax.swing.JButton jBSelectionMessageBox;
    private javax.swing.JButton jBopenFile;
    private javax.swing.JButton jBsaveFile;
    private javax.swing.JTextField jTFattachString;
    // End of variables declaration//GEN-END:variables
}
