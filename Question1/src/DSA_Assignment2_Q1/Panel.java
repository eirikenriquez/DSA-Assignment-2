package DSA_Assignment2_Q1;

import java.io.File;
import java.io.FileNotFoundException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author eirik
 */
public class Panel extends javax.swing.JPanel {

    private final Controller controller;
    private final Model model;
    private String selectedList;

    /**
     * Creates new form Panel
     */
    public Panel() {
        this.controller = new Controller(this);
        this.model = new Model();
        this.selectedList = SortOption.NAME.nameOfKey; // default value
        initComponents();
        addListeners();
    }

    private void addListeners() {
        loadButton.addActionListener(controller);
        saveButton.addActionListener(controller);
        keyButton.addActionListener(controller);
        sortButton.addActionListener(controller);
        searchButton.addActionListener(controller);
    }

    public void loadFile() {
        JFileChooser chooser = new JFileChooser(new File("./res"));
        chooser.setFileFilter(new FileNameExtensionFilter("Text File (\".txt\")", "txt"));
        int option = chooser.showOpenDialog(null);

        // if user chooses a file
        if (option == JFileChooser.APPROVE_OPTION) {
            try {
                setListText(model.readFile(chooser.getSelectedFile()));
            } catch (FileNotFoundException ex) {
                System.out.println("Error: " + ex.toString());
            }
        }
    }

    public void saveFile() {
        JFileChooser chooser = new JFileChooser(new File("./res"));
        chooser.setFileFilter(new FileNameExtensionFilter("Text File (\".txt\")", "txt"));
        int option = chooser.showSaveDialog(null);

        if (option == JFileChooser.APPROVE_OPTION) {
            String fileName = chooser.getSelectedFile().getPath();
            model.writeFile(listText.getText(), fileName);
        }
    }

    private void setListText(String str) {
        this.listText.setText(str);
    }

    public void setKey() {
        String[] sortOptions = new String[SortOption.NUMBER_OF_OPTIONS];
        sortOptions[0] = SortOption.NAME.nameOfKey;
        sortOptions[1] = SortOption.MARK.nameOfKey;

        selectedList = (String) JOptionPane.showInputDialog(null, "Sort Options", "Sort Options", JOptionPane.PLAIN_MESSAGE, null, sortOptions, null);

        if (selectedList != null) {
            setListText(model.getSelectedList(selectedList));
            currentKey.setText(selectedList);
        }
    }

    public void sort() {
        model.sort();
        setListText(model.getSelectedList(selectedList));
    }

    public void search() {
        String searchQuery = searchText.getText();
        resultsText.setText(model.search(searchQuery, selectedList));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loadButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        keyButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        searchText = new javax.swing.JTextField();
        listScrollPane = new javax.swing.JScrollPane();
        listText = new javax.swing.JTextArea();
        sortButton = new javax.swing.JButton();
        listLabel = new javax.swing.JLabel();
        resultsLabel = new javax.swing.JLabel();
        resultsScrollPane = new javax.swing.JScrollPane();
        resultsText = new javax.swing.JTextArea();
        currentKey = new javax.swing.JLabel();
        currentKey.setText(selectedList);

        loadButton.setText("Load");

        saveButton.setText("Save");

        keyButton.setText("Set Key");

        searchButton.setText("Search");

        listScrollPane.setViewportView(null);

        listText.setColumns(20);
        listText.setRows(5);
        listScrollPane.setViewportView(listText);

        sortButton.setText("Sort");

        listLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        listLabel.setText("List");

        resultsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultsLabel.setText("Search Results");

        resultsText.setColumns(20);
        resultsText.setRows(5);
        resultsScrollPane.setViewportView(resultsText);

        currentKey.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(listScrollPane)
                            .addComponent(listLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(resultsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(resultsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(loadButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(saveButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 312, Short.MAX_VALUE)
                                .addComponent(sortButton)
                                .addGap(32, 32, 32)
                                .addComponent(keyButton))
                            .addComponent(searchText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(currentKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadButton)
                    .addComponent(saveButton)
                    .addComponent(keyButton)
                    .addComponent(sortButton)
                    .addComponent(currentKey))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listLabel)
                    .addComponent(resultsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(listScrollPane)
                    .addComponent(resultsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currentKey;
    private javax.swing.JButton keyButton;
    private javax.swing.JLabel listLabel;
    private javax.swing.JScrollPane listScrollPane;
    private javax.swing.JTextArea listText;
    private javax.swing.JButton loadButton;
    private javax.swing.JLabel resultsLabel;
    private javax.swing.JScrollPane resultsScrollPane;
    private javax.swing.JTextArea resultsText;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchText;
    private javax.swing.JButton sortButton;
    // End of variables declaration//GEN-END:variables
}
