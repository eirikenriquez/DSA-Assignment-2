package DSA_Assignment2_Q1;

import java.io.File;
import java.io.FileNotFoundException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author eirik
 */
public class Panel extends javax.swing.JPanel {

    private final Controller controller;
    private final Model model;
    private String fileContents;

    /**
     * Creates new form Panel
     */
    public Panel() {
        this.controller = new Controller(this);
        this.model = new Model();
        fileContents = "";
        initComponents();
        addListeners();
    }

    private void addListeners() {
        loadButton.addActionListener(controller);
        saveButton.addActionListener(controller);
        sortButton.addActionListener(controller);
        searchButton.addActionListener(controller);
    }

    public void loadFile() {
        JFileChooser chooser = new JFileChooser(new File("./res"));
        chooser.setFileFilter(new FileNameExtensionFilter("Text File (\".txt\")", "txt"));
        int option = chooser.showOpenDialog(null);

        // if user chooses a file
        if (option == JFileChooser.APPROVE_OPTION) {
            try {
                fileContents = model.readFile(chooser.getSelectedFile());
                setStudentsText();
            } catch (FileNotFoundException ex) {
                System.out.println("Error: " + ex.toString());
            }
        }
    }

    public void saveFile() {
        JFileChooser chooser = new JFileChooser(new File("./res"));
        chooser.setFileFilter(new FileNameExtensionFilter("Text File (\".txt\")", "txt"));
        int option = chooser.showSaveDialog(null);

        if (option == JFileChooser.APPROVE_OPTION) {
            String fileName = chooser.getSelectedFile().getPath();
            model.writeFile(studentsText.getText(), fileName);
        }
    }

    private void setStudentsText() {
        this.studentsText.setText(fileContents);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loadButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        sortButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        searchText = new javax.swing.JTextField();
        resultScrollPane = new javax.swing.JScrollPane();
        studentsText = new javax.swing.JTextArea();

        loadButton.setText("Load");

        saveButton.setText("Save");

        sortButton.setText("Sort");

        searchButton.setText("Search");

        studentsText.setColumns(20);
        studentsText.setRows(5);
        resultScrollPane.setViewportView(studentsText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(searchText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sortButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadButton)
                    .addComponent(saveButton)
                    .addComponent(sortButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resultScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton loadButton;
    private javax.swing.JScrollPane resultScrollPane;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchText;
    private javax.swing.JButton sortButton;
    private javax.swing.JTextArea studentsText;
    // End of variables declaration//GEN-END:variables
}
